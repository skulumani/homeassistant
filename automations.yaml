# Lights
- id: lights_on_evening_civil_twilight
  alias: Lights on at evening civil twilight
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''civil_twilight'' }}'
  condition:
  - condition: time
    after: '16:00:00'
  action:
  - data:
      brightness_pct: 30
      entity_id:
      - light.living_room_lights
      - light.exterior
      - light.hallway
      transition: 60
    service: light.turn_on
  # - data:
  #     message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at evening civil
  #       twilight'
  #   service: notify.signal_group
  mode: single
- id: lights_on_evening_nautical_twilight
  alias: Lights on at evening nautical twilight
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''nautical_twilight''
      }}'
  condition:
  - condition: time
    after: '16:00:00'
  action:
  - data:
      brightness_pct: 50
      entity_id:
      - light.living_room_lights
      - light.exterior
      - light.hallway
      transition: 60
    service: light.turn_on
  # - data:
  #     message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at evening nautical
  #       twilight'
  #   service: notify.signal_group
  mode: single
- id: lights_on_morning_nautical_twilight
  alias: Lights on morning
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''nautical_twilight''
      }}'
  condition:
  - condition: time
    before: 09:00:00
  action:
  - data:
      brightness_pct: 30
      entity_id:
      - light.living_room_lights
      - light.hallway
      transition: 60
    service: light.turn_on
  # - data:
  #     message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights on in the morning
  #       nautical twilight.'
  #   service: notify.signal_group
  mode: single
- id: lights_off_sunrise
  alias: Lights off after sunrise
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''day'' }}'
  condition: []
  action:
  - data:
      entity_id: all
      transition: 60
    service: light.turn_off
  # - data:
  #     message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - All lights off at sunrise'
  #   service: notify.signal_group
  mode: single
- id: lights_off_2300
  alias: Lights off at 2300
  trigger:
  - at: '23:00'
    platform: time
  condition: []
  action:
  - data:
      entity_id:
      - light.downstairs_lights
      - light.upstairs_lights
      transition: 60
    service: light.turn_off
  # - data:
  #     message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights downstairs and
  #       upstairs turned off at 2300'
  #   service: notify.signal_group
  mode: single

- id: bedroom_light_on_morning
  alias: Bedroom on in morning
  trigger:
  - platform: time
    at: 06:20:00
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - data:
      brightness_pct: 20
      entity_id:
      - light.upstairs_lights
      transition: 600
    service: light.turn_on
  # - data:
  #     message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Upstairs lights on in morning'
  #   service: notify.signal_group
  mode: single

# Commute/Work
- id: update_morning_commute_sensor
  alias: Commute - Update morning commute sensor
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    after: 05:00:00
    before: '6:00:00'
  - condition: time
    weekday:
    - tue
    - wed
    - thu
  action:
  - service: homeassistant.update_entity
    entity_id: sensor.waze_home_to_collins

# Phone charging
- id: stop_pixel_charging
  alias: Stop Pixel 2 Charging
  trigger:
  - platform: numeric_state
    entity_id: sensor.pixel_2_battery_level
    above: 80
  action:
  - service: tts.google_translate_say
    entity_id: media_player.bedroom_speaker
    data:
      message: Pixel 2 has finished charging to {{states('sensor.pixel_2_battery_level')}}
        percent
  - service: switch.turn_off
    entity_id: switch.plug
- id: start_pixel_charging
  alias: Start Pixel 2 Charging
  trigger:
  - platform: numeric_state
    entity_id: sensor.pixel_2_battery_level
    below: 50
  action:
  - service: tts.google_translate_say
    entity_id: media_player.bedroom_speaker
    data:
      message: Pixel 2 can now be charged from {{states('sensor.pixel_2_battery_level')}}
        percent
  - service: switch.turn_on
    entity_id: switch.plug

# Motion cameras
# - id: front_camera_motion_signal
#   initial_state: false
#   alias: Send front video to signal group
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.motion_front
#     to: 'on'
#   condition: []
#   action:
#   - service: script.turn_on
#     entity_id: script.front_camera_signal_motion
#   mode: single

# - id: back_camera_motion_signal
#   initial_state: false
#   alias: Send back video to signal group
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.motion_back
#     to: 'on'
#   condition: []
#   action:
#   - service: script.turn_on
#     entity_id: script.back_camera_signal_motion
#   mode: single

# - id: hvac_away_mode
#   alias: HVAC Away Mode when not home
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.shankar_presence
#     to: 'off'
#     for: 00:30:00
#   - platform: state
#     entity_id: binary_sensor.christine_presence
#     to: 'off'
#   condition:
#   - condition: and
#     conditions:
#     - condition: state
#       entity_id: binary_sensor.shankar_presence
#       state: 'off'
#     - condition: state
#       entity_id: binary_sensor.christine_presence
#       state: 'off'
#   action:
#   - service: notify.signal_group
#     data:
#       message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - No one home. Away mode
#         for HVAC'
#   mode: single

# Home sensors/switches
- id: doorbell_single_click
  alias: doorbell_single_click
  initial_state: true
  trigger:
    platform: event
    event_type: "deconz_event"
    event_data:
      id: "mini_switch"
      event: 1002
  action: 
    - service: script.sound_doorbell

# WATER LEAK ALARM
- alias: "Water leak detected"
  trigger:
    - platform: state
      entity_id: group.water_sensors
      to: "on"
  action:
    - service: notify.signal_group
      data:
        message: >-
          {% for entity in trigger.to_state.attributes.entity_id %}
          {% if states(entity) == 'on' %}
            " {{now().strftime('%Y-%m-%dT%H:%M:%S%z')}} Water leak detected!! - {{ state_attr(entity, 'friendly_name') }}"
          {% endif %}
          {% endfor %}
    - service: tts.google_translate_say
      entity_id: group.google_home
      data:
        message: >-
          {% for entity in trigger.to_state.attributes.entity_id %}
          {% if states(entity) == 'on' %}
            "Water leak in {{ state_attr(entity, 'friendly_name') }}"
          {% endif %}
          {% endfor %}

# ALARM

- alias: "Alarm - Trigger when sensors go off"
  trigger: 
    - platform: state
      entity_id: group.alarm_sensors
      to: "on"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: armed_home
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm

# TODO - Add automation to send video when alarm is pending

- alias: "Alarm - Pending Reminder"
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm
      from: "armed_away" # no delay for armed_home
      to: "pending"
  action:
    - service: tts.google_translate_say
      entity_id: group.google_home
      data:
        message: "Alarm initiated"
    - service: timer.start
      entity_id: timer.alarm_pending

- alias: "Alarm - Pending Repeat"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.alarm_pending
  condition:
    condition: state
    entity_id: alarm_control_panel.alarm
    state: "pending"
  action:
    - service: tts.google_translate_say
      entity_id: group.google_home
      data:
        message: "Disarm the alarm now!"
    - service: timer.start
      entity_id: timer.alarm_pending


- alias: "Alarm - Triggered"
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm
      to: "triggered"
  action: 
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Alarm Triggered!!'
    - service: script.sound_alarm


- alias: "Alarm - Disarmed"
  trigger: 
    - platform: state
      entity_id: alarm_control_panel.alarm
      to: "disarmed"
  action:
    # turn off the alarm
    - service: tts.google_translate_say
      entity_id: group.google_home
      data:
        message: "Disarmed"
    - service: timer.cancel
      entity_id: timer.alarm_pending

- alias: "Disarm alarm when presence is detected"
  trigger: # either person is home
    - platform: state
      entity_id: group.family_presence
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: "armed_away"
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm
    - delay: "00:00:05"
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Alarm disarmed due to presence.'
    - service: tts.google_translate_say
      entity_id: group.google_home
      data:
        message: "Disarmed due to presence"

- alias: "Arm the alarm when no one is home"
  trigger:
    - platform: state
      entity_id: group.family_presence
      to: "off"
      for: "00:05:00"
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: "disarmed"
  action:
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alarm
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Alarm armed in away mode due to lack of presence.'

- alias: "Arm alarm at night and home"
  trigger:
  - at: '23:00'
    platform: time
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family_presence
        state: "on"
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: "disarmed"
  action:
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.alarm
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Alarm armed in home mode at night and home.'

- alias: "Disarm alarm when home in morning"
  trigger:
    - platform: time
      at: '06:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family_presence
        state: "on"
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: "armed_home"
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Alarm disarmed in morning.'

# Frigate automation
- id: frigate_signal 
  alias: Frigate Signal notification
  trigger:
    platform: mqtt
    topic: frigate/events
  action:
    - service: notify.signal_group
      data:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected by the {{trigger.payload_json["after"]["camera"]}}. ID: {{trigger.payload["after"]["id"]}}. Thumbnail filename is /media/frigate/clips/{{trigger.payload_json["after"]["camera"]}}-{{trigger.payload_json["after"]["id"]}}.jpg '
        data:
          attachments:
            - '/media/frigate/clips/{{trigger.payload_json["after"]["camera"]}}-{{trigger.payload_json["after"]["id"]}}.jpg'
    # - service: notify.mobile_app_pixel_2
    #   data_template:
    #     message: 'A {{trigger.payload_json["after"]["label"]}} was detected.'
    #     data:
    #       image: 'https://192.168.88.12:8123/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg?format=android'
    #       tag: '{{trigger.payload_json["after"]["id"]}}'
