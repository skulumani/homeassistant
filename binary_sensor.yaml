# Binary sensor
- platform: bayesian
  prior: 0.66
  name: 'Christine Presence'
  probability_threshold: 0.7
  device_class: 'presence'
  observations:
    # - entity_id: 'device_tracker.galaxy_s9'
    #   prob_given_true: 0.97
    #   prob_given_false: 0.94
    #   platform: 'state'
    #   to_state: 'home'
    - entity_id: 'device_tracker.galaxy_s20_router'
      prob_given_true: 0.9
      prob_given_false: 0.01
      platform: 'state'
      to_state: 'home'
    - entity_id: 'device_tracker.christine_laptop'
      prob_given_true: 0.35
      prob_given_false: 0.01
      platform: 'state'
      to_state: 'home'
    # - entity_id: 'device_tracker.christines_air'
    #   prob_given_true: 0.17
    #   prob_given_false: 0.01
    #   platform: 'state'
    #   to_state: 'home'
    # - entity_id: 'device_tracker.50tclrokutv'
    #   prob_given_true: 0.09
    #   prob_given_false: 0.50
    #   platform: 'state'
    #   to_state: 'home'

- platform: bayesian
  prior: 0.58
  name: 'Shankar Presence'
  probability_threshold: 0.7
  device_class: 'presence'
  observations:
    - entity_id: 'device_tracker.pixel_2'
      prob_given_true: 0.99
      prob_given_false: 0.80
      platform: 'state'
      to_state: 'home'
    # - entity_id: 'device_tracker.shankars_air'
    #   prob_given_true: 0.07
    #   prob_given_false: 0.001
    #   platform: 'state'
    #   to_state: 'home'
    - entity_id: 'device_tracker.pixel_2_router'
      prob_given_true: 0.96
      prob_given_false: 0.03
      platform: 'state'
      to_state: 'home'
    - entity_id: 'device_tracker.pop_os'
      prob_given_true: 0.21
      prob_given_false: 0.05
      platform: 'state'
      to_state: 'home'
    # - entity_id: 'device_tracker.50tclrokutv'
    #   prob_given_true: 0.14
    #   prob_given_false: 0.1
    #   platform: 'state'
    #   to_state: 'home'

# - platform: rest
#   name: 'Nexus Motion'
#   resource: http://10.0.0.4:8080/sensors.json?sense=motion_active
#   value_template: '{{ value_json.motion_active.data[0][1][0] | round(0) }}'
#   # sensor_class: motion

# front camera motion sensor
- platform: template
  sensors:
    motion_front:
      friendly_name: Front Camera
      device_class: motion
      value_template: "{{ is_state('camera.front', 'motion') }}"
      delay_off:
        seconds: 120
# back camera motion sensor
- platform: template
  sensors:
    motion_back:
      friendly_name: back Camera
      device_class: motion
      value_template: "{{ is_state('camera.back', 'motion') }}"
      delay_off:
        seconds: 120
- platform: ping
  name: Router Ping
  host: 192.168.88.1
  count: 2
  scan_interval: 60
- platform: ping
  name: Upstairs WAP Ping
  host: 192.168.88.6
  count: 2
  scan_interval: 60
- platform: ping
  name: Downstairs WAP Ping
  host: 192.168.88.5
  count: 2
  scan_interval: 60
- platform: ping
  name: Switch Ping
  host: 192.168.88.4
  count: 2
  scan_interval: 60
- platform: ping
  name: Front Camera Ping
  host: 192.168.200.15
  count: 2
  scan_interval: 60
- platform: ping
  name: Back Camera Ping
  host: 192.168.200.16
  count: 2
  scan_interval: 60
- platform: ping
  name: Google
  host: 8.8.8.8
  count: 2
  scan_interval: 10
- platform: ping
  name: Cloudflare
  host: 1.1.1.1
  count: 2
  scan_interval: 10
- platform: workday
  country: US
  workdays: [mon, tue, wed, thu, fri]
  excludes: [sat, sun, holiday]
  add_holidays:
    - '2021-01-01'
    - '2021-04-02'
    - '2021-05-31'
    - '2021-06-05'
    - '2021-09-06'
    - '2021-11-25'
    - '2021-12-24'
    - '2021-12-27'
    - '2021-12-28'
    - '2021-12-29'
    - '2021-12-30'
    - '2021-12-31'

# Sensors for docker services
- platform: command_line
  name: Deconz Status
  command: response=$(curl -LIk -m 3 http://192.168.88.12:44449/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 200 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'
- platform: command_line
  name: Frigate Status
  command: response=$(curl -LIk -m 3 http://192.168.88.12:5000/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 200 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'
- platform: command_line
  name: Photoprism Status
  command: response=$(curl -LIk -m 3 http://192.168.88.12:2342/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 200 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'
- platform: command_line
  name: Syncthing Status
  command: response=$(curl -LIk -m 3 http://192.168.88.12:8384/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 401 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'
- platform: command_line
  name: Omada Status
  command: response=$(curl -LIk -m 3 https://192.168.88.12:8043/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 200 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'
- platform: command_line
  name: InfluxDB Status
  command: response=$(curl -LIk -m 3 http://192.168.88.12:8086/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 200 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'
- platform: command_line
  name: Grafana Status
  command: response=$(curl -LIk -m 3 http://192.168.88.12:3000/ -o /dev/null -w "%{http_code}\n" -s); test "$response" -eq 200 && echo "OFF" || echo "ON"
  scan_interval: 60
  value_template: '{{value}}'
  device_class: 'problem'

- platform: tod
  name: evening_tod
  after: "16:00"
  before: "23:00"

- platform: tod
  name: do_not_disturb
  after: "21:00"
  before: "06:00"


