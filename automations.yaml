- id: lights_on_evening_civil_twilight
  alias: Lights on at evening civil twilight
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''civil_twilight'' }}'
  condition:
  - condition: time
    after: '16:00:00'
  action:
  - data:
      brightness_pct: 25
      entity_id:
      - light.living_room_lights
      - light.upstairs_lights
      transition: 10
    service: light.turn_on
  - data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at evening civil
        twilight'
    service: notify.signal
  mode: single
- id: lights_on_evening_nautical_twilight
  alias: Lights on at evening nautical twilight
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''nautical_twilight''
      }}'
  condition:
  - condition: time
    after: '16:00:00'
  action:
  - data:
      brightness_pct: 50
      entity_id:
      - light.living_room_lights
      - light.upstairs_lights
      transition: 10
    service: light.turn_on
  - data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at evening nautical
        twilight'
    service: notify.signal
  mode: single
- id: lights_on_morning_nautical_twilight
  alias: Lights on morning
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''nautical_twilight''
      }}'
  condition:
  - condition: time
    before: 09:00:00
  action:
  - data:
      brightness_pct: 50
      entity_id:
      - light.living_room_lights
      transition: 10
    service: light.turn_on
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights on in the morning
        nautical twilight.'
    service: notify.signal
  mode: single
- id: lights_off_sunrise
  alias: Lights off after sunrise
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''day'' }}'
  condition: []
  action:
  - data:
      entity_id: all
      transition: 10
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - All lights off at sunrise'
    service: notify.signal
  mode: single
- id: lights_off_2300
  alias: Lights off at 2300
  trigger:
  - at: '23:00'
    platform: time
  condition: []
  action:
  - data:
      entity_id:
      - light.downstairs_lights
      - light.upstairs_lights
      transition: 10
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights downstairs and
        upstairs turned off at 2300'
    service: notify.signal
  mode: single
- id: update_morning_commute_sensor
  alias: Commute - Update morning commute sensor
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    after: 05:00:00
    before: '6:00:00'
  - condition: time
    weekday:
    - tue
    - wed
    - thu
  action:
  - service: homeassistant.update_entity
    entity_id: sensor.waze_home_to_collins
- id: lower_living_room_media_playing
  alias: Lower living room playing tv
  trigger:
  - platform: state
    entity_id: media_player.50_tcl_roku_tv
    to: playing
  action:
  - service: scene.turn_on
    entity_id: scene.lower_living_room_lights
  condition:
  - condition: template
    value_template: '{{ states.sensor.period_of_day.state != ''day'' }}'
- id: raise_living_room_media_playing
  alias: Raise living room paused tv
  trigger:
  - platform: state
    entity_id: media_player.50_tcl_roku_tv
    to: 'off'
  - platform: state
    entity_id: media_player.50_tcl_roku_tv
    to: paused
  action:
  - service: scene.turn_on
    entity_id: scene.raise_living_room_lights
  condition:
  - condition: template
    value_template: '{{ states.sensor.period_of_day.state != ''day'' }}'
- id: stop_pixel_charging
  alias: Stop Pixel 2 Charging
  trigger:
  - platform: numeric_state
    entity_id: sensor.pixel_2_battery_level
    above: 80
  action:
  - service: tts.google_translate_say
    entity_id: media_player.bedroom_speaker
    data:
      message: Pixel 2 has finished charging to {{states('sensor.pixel_2_battery_level')}}
        percent
  - service: switch.turn_off
    entity_id: switch.plug
- id: start_pixel_charging
  alias: Start Pixel 2 Charging
  trigger:
  - platform: numeric_state
    entity_id: sensor.pixel_2_battery_level
    below: 50
  action:
  - service: tts.google_translate_say
    entity_id: media_player.bedroom_speaker
    data:
      message: Pixel 2 has can now be charged from {{states('sensor.pixel_2_battery_level')}}
        percent
  - service: switch.turn_on
    entity_id: switch.plug
- id: front_camera_motion_signal
  alias: Send front video to signal group
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_front
    to: 'on'
  action:
  - service: camera.record
    entity_id: camera.front
    data:
      entity_id: camera.front
      filename: '/media/usb/snapshot_front.mp4'
      duration: 20
      lookback: 10
  - delay: 20
  - service: notify.signal_group
    data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Front Camera Motion'
      data:
        attachments:
          - '/media/usb/snapshot_front.mp4'
  mode: single
- id: back_camera_motion_signal
  alias: Send back video to signal group
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_back
    to: 'on'
  action:
  - service: camera.record
    entity_id: camera.back
    data:
      entity_id: camera.back
      filename: '/media/usb/snapshot_back.mp4'
      duration: 20
      lookback: 10
  - delay: 20
  - service: notify.signal_group
    data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Back Camera Motion'
      data:
        attachments:
          - '/media/usb/snapshot_back.mp4'
  mode: single
