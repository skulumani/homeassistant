- id: '1558230448181'
  alias: Lights on at Sunset
  trigger:
  - event: sunset
    offset: -0:30
    platform: sun
  condition: []
  action:
  - data:
      entity_id: all
    service: light.turn_on
  - data:
      message: '{{now().strftime("%Y%m%d-%H%M%S")}} Lights on at sunset'
    service: notify.signal_notify
- id: '1560716169783'
  alias: Lights on weekday morning
  trigger:
  - at: 05:00
    platform: time
  condition: []
  action:
  - data:
      entity_id: light.living_room_lamp
    service: light.turn_on
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Living room on in the
        morning.'
- id: '1560716243441'
  alias: Lights off after sunrise
  trigger:
  - event: sunrise
    offset: 0:30
    platform: sun
  condition: []
  action:
  - data:
      entity_id: all
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights off at sunrise'
    service: notify.signal_notify
- id: Matrix Bot
  alias: Reaction to !testword
  trigger:
    platform: event
    event_type: matrix_command
    event_data:
      command: testword
  action:
    service: notify.matrix_notify
    data:
      message: You wrote !testword
- id: '1560740677249'
  alias: Lights off at 2300
  trigger:
  - at: '23:00'
    platform: time
  condition: []
  action:
  - service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights turned off'
    service: notify.signal_notify
- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: Dark - Blue
- alias: Rainy Day
  trigger:
    - platform: state
      entity_id: sensor.precip_intensity
      to: 'rain'
  condition:
    # - condition: state
    #   entity_id: group.all_devices
    #   state: 'home'
    - condition: time
      after: '14:00'
      before: '23:00'
  action:
  - service: light.turn_on
    entity_id: all
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Rain stopped. Lights off'
- alias: 'Rain is over'
  trigger:
    - platform: state
      entity_id: sensor.precip_intensity
      to: 'None'
  condition:
    - condition: sun
      after: 'sunset'
      after_offset: '-01:00:00'
  action:
  - service: light.turn_off
    entity_id: all
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Rain stopped. Lights off'
