- id: '1558230448181'
  alias: Lights on at Sunset
  trigger:
  # - platform: sun
  #   event: sunset
  #   offset: "-00:45:00"
  # - platform: numeric_state
  #   entity_id: sun.sun
  #   value_template: '{{ state.attributes.elevation }}'
  #   below: 6
  - platform: template
    value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
  condition: []
  # - condition: time
  #   after: '14:00'
  #   before: '23:00'
  action:
  - data:
      entity_id: all
      transition: 300
      brightness: 125
    service: light.turn_on
  - data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at sunset'
    service: notify.signal_notify
- id: '1560716169783'
  alias: Lights on weekday morning
  trigger:
  - at: 05:00
    platform: time
  condition: 
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
  - data:
      entity_id: light.living_room_lamp
      transition: 300
      brightness: 125
    service: light.turn_on
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Living room on in the morning.'
- id: '1560716243441'
  alias: Lights off after sunrise
  trigger:
  - event: sunrise
    offset: 0:30
    platform: sun
  condition: []
  action:
  - data:
      entity_id: all
      transition: 300
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights off at sunrise'
    service: notify.signal_notify
- id: Matrix Bot
  alias: Reaction to !testword
  trigger:
    platform: event
    event_type: matrix_command
    event_data:
      command: testword
  action:
    service: notify.matrix_notify
    data:
      message: You wrote !testword
- id: '1560740677249'
  alias: Lights off at 2300
  trigger:
  - at: '23:00'
    platform: time
  condition: []
  action:
  - data:
      entity_id: all
      transition: 300
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights turned off'
    service: notify.signal_notify
- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: Dark - Blue
- alias: Rainy Day
  trigger:
    - platform: state
      entity_id: sensor.precip_intensity
      to: 'rain'
  condition:
    # - condition: state
    #   entity_id: group.all_devices
    #   state: 'home'
    - condition: time
      after: '14:00'
      before: '23:00'
  action:
  - service: light.turn_on
    entity_id: all
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Rain stopped. Lights on'
- alias: 'Rain is over'
  trigger:
    - platform: state
      entity_id: sensor.precip_intensity
      to: 'None'
  condition:
    - condition: sun
      after: 'sunset'
      after_offset: '-01:00:00'
  action:
  - service: light.turn_off
    entity_id: all
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Rain stopped. Lights off'
- id: update_morning_commute_sensor
  alias: "Commute - Update morning commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/5'
  condition:
    - condition: time
      after: '05:00:00'
      before: '6:00:00'
    - condition: time
      weekday:
        - tue
        - wed
        - thu
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.waze_home_to_collins
    # - data_template:
    #     message: "{{ now().strftime('%Y-%m-%dT%H:%M:%S%z') }} - Travel time is {{ states('sensor.waze_home_to_collins') }}"
    #   service: notify.signal_notify
- id: change_light_commute_time
  alias: "Commute - change light color"
  trigger:
    platform: time_pattern
    minutes: '/5' 
  condition:
    - condition: time
      after: '05:00:00'
      before: '06:00:00'
    - condition: time
      weekday:
        - tue
        - wed
        - thu
  action:
  - service: light.turn_on
    data_template: 
      entity_id: light.living_room_lamp
      brightness: 125
      color_name: >
        {% set drive_time = state('sensor.waze_home_to_collins') %}
        {% if 0 <= drive_time <= 50 %}
        "green"
        {% elif 50 < drive_time <= 60 %}
        "orange"
        {% elif drive_time > 60 %}
        "red"
        {% else %}
        "white" # in case the drive time isn't inside any of these if statements
        {% endif %}
- id: "Update homeassistant notify to Signal"
  alias: Update notification
  trigger:
  - platform: state
    entity_id: updater.updater
  action:
  - service: notify.signal_notify
    data_template:
      message: "Home Assistant {{ states('updater.updater') }} is now available."
- alias: 'Auto Renew SSL Cert'
  trigger:
  - platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 29
  action:
  - service: shell_command.renew_ssl
- alias: 'SSL expiry notification'
  trigger:
  - platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 21
  action:
  - service: notify.signal_notify
    data_template:
      message: "Warning - SSL certificate expires in 21 days and has not been automatically renewed"
- alias: Motion detected
  trigger: 
    platform: webhook
    webhook_id: motion_detected
  action:
    service: notify.signal_notify
    data_template:
      message: "Motion detected {{ trigger.query['file'] }}"
      data: 
        attachments: "/media/usb/motioneye/Camera1/movie.mp4"
        # attachments: "/media/usb/motioneye/Camera1/image.jpg"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'device_tracker.shankar_pixel'
        state: 'Away'
        for:
          minutes: 10
      - condition: state
        entity_id: 'device_tracker.christine_s9'
        state: 'Away'
        for:
          minutes: 10


