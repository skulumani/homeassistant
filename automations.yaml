- id: lights_on_sunset
  alias: Lights on at Sunset
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''nautical_twilight'' }}'
  condition:
  - condition: time
    before: '23:59:00'
  action:
  - data:
      brightness_pct: 50
      entity_id:
      - light.sconce_1
      - light.sconce_2
      - light.bedroom_lamp
      - light.front_door
      transition: 300
    service: light.turn_on
  - data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at sunset'
    service: notify.signal
  mode: single
- id: lights_on_morning
  alias: Lights on morning
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''nautical_twilight'' }}'
  condition:
  - condition: time
    before: '09:00:00'
  action:
  - data:
      brightness_pct: 50
      entity_id: 
        - light.sconce_1
        - light.sconce_2
      transition: 300
    service: light.turn_on
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights on in the morning.'
    service: notify.signal_notify
  mode: single
- id: lights_off_sunrise
  alias: Lights off after sunrise
  trigger:
  - platform: template
    value_template: '{{ states.sensor.period_of_day.state == ''day'' }}'
  condition: []
  action:
  - data:
      entity_id: all
      transition: 300
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - All lights off at sunrise'
    service: notify.signal
  mode: single
- id: lights_off_2300
  alias: Lights off at 2300
  trigger:
  - at: '23:00'
    platform: time
  condition: []
  action:
  - data:
      entity_id:
      - light.sconce_1
      - light.sconce_2
      - light.dining_room_lamp
      - light.bedroom_lamp
      transition: 300
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights turned off at 2300'
    service: notify.signal
  mode: single
- id: update_morning_commute_sensor
  alias: Commute - Update morning commute sensor
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    after: 05:00:00
    before: '6:00:00'
  - condition: time
    weekday:
    - tue
    - wed
    - thu
  action:
  - service: homeassistant.update_entity
    entity_id: sensor.waze_home_to_collins
# - id: homeassistant_update_notification
#   alias: Update notification
#   trigger:
#   - platform: state
#     entity_id: updater.updater
#   action:
#   - service: notify.signal
#     data_template:
#       message: Home Assistant {{ states('updater.updater') }} is now available.
