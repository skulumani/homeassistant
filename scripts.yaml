front_camera_signal_motion:
  mode: single
  alias: Notify Signal Front Camera motion detection
  sequence:
    - service: camera.record
      data:
        entity_id: camera.front
        filename: '/media/camera/snapshot_front.mp4'
        duration: 20
        # loopback: 5
    - delay: '00:00:30'
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Front Camera Motion'
        data:
          attachments: 
            - '/media/camera/snapshot_front.mp4'
back_camera_signal_motion:
  mode: single
  alias: Notify Signal Back Camera motion detection
  sequence:
    - service: camera.record
      data:
        entity_id: camera.back
        filename: '/media/camera/snapshot_back.mp4'
        duration: 20
        # loopback: 5
    - delay: '00:00:30'
    - service: notify.signal_group
      data:
        message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Back Camera Motion'
        data:
          attachments: 
            - '/media/camera/snapshot_back.mp4'
roku_espn_tap_action:
  mode: single
  alias: Roku ESPN F1 sequence
  sequence:
    - service: media_player.select_source
      data:
        entity_id: media_player.50_tcl_roku_tv
        source: "ESPN"
    - delay: 
        seconds: 10
    - service: remote.send_command
      data:
        entity_id: remote.50_tcl_roku_tv
        command:
          - down
          - down
          - down
          - right
          - right
          - right
          - right
          - right
          - right
          - right
          - select

flash_light:
  mode: single
  sequence:
    - service: light.turn_on
      data:
        entity_id: "light.{{ light }}"
    - repeat:
        count: "{{ count|int * 2 - 1 }}"
        sequence:
          - delay: 
              milliseconds: 750
          - service: light.toggle
            data:
              entity_id: "light.{{ light }}"

sound_alarm:
  mode: single
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: group.google_home
        volume_level: 1.0
    - alias: "Repeat alarm"
      repeat:
        while:
          - condition: state
            entity_id: alarm_control_panel.alarm
            state: "triggered"
          - condition: template
            value_template: "{{ repeat.index < 100 }}"
        sequence:
          # raise volume to max
          - service: tts.google_translate_say
            entity_id: group.google_home
            data:
              message: "Intruder Alert!"
          - delay:
              milliseconds: 3000
    - service: media_player.volume_set
      data_template: 
        entity_id: group.google_home
        volume_level: 0.3

sound_doorbell:
  mode: single
  sequence:
    - service: media_player.volume_set
      data_template: 
        entity_id: group.google_home
        volume_level: 1.0
    - alias: "Repeat doorbell"
      repeat:
        while:
          - condition: template
            value_template: "{{ repeat.index < 4 }}"
        sequence:
          # raise volume to max
          - service: tts.google_translate_say
            entity_id: group.google_home
            data:
              message: "Doorbell"
          - delay:
              milliseconds: 1000
    - service: media_player.volume_set
      data_template: 
        entity_id: group.google_home
        volume_level: 0.3

# flash_hallway_light:
#   sequence:
#     - service: script.flash_light
#       data:
#         light: hallway
#         count: 3

# Script record video and send over signal
