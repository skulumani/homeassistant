- id: '1558230448181'
  alias: Lights on at Sunset
  trigger:
  # - platform: sun
  #   event: sunset
  #   offset: "-00:45:00"
  # - platform: numeric_state
  #   entity_id: sun.sun
  #   value_template: '{{ state.attributes.elevation }}'
  #   below: 6
  - platform: template
    value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
  condition: []
  # - condition: time
  #   after: '14:00'
  #   before: '23:00'
  action:
  - data:
      entity_id: all
      transition: 300
      brightness: 125
    service: light.turn_on
  - data:
      message: '{{now().strftime("%Y-%m-%dT%H:%M:%S%z")}} Lights on at sunset'
    service: notify.signal_notify
- id: '1560716169783'
  alias: Lights on weekday morning
  trigger:
  - at: 05:00
    platform: time
  condition: 
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
  - data:
      entity_id: light.living_room_lamp
      transition: 300
      brightness: 125
    service: light.turn_on
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Living room on in the morning.'
- id: '1560716243441'
  alias: Lights off after sunrise
  trigger:
  - event: sunrise
    offset: 0:30
    platform: sun
  condition: []
  action:
  - data:
      entity_id: all
      transition: 300
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights off at sunrise'
    service: notify.signal_notify
- id: Matrix Bot
  alias: Reaction to !testword
  trigger:
    platform: event
    event_type: matrix_command
    event_data:
      command: testword
  action:
    service: notify.matrix_notify
    data:
      message: You wrote !testword
- id: '1560740677249'
  alias: Lights off at 2300
  trigger:
  - at: '23:00'
    platform: time
  condition: []
  action:
  - data:
      entity_id: all
      transition: 300
    service: light.turn_off
  - data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Lights turned off'
    service: notify.signal_notify
- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: Dark - Blue
- alias: Rainy Day
  trigger:
    - platform: state
      entity_id: sensor.precip_intensity
      to: 'rain'
  condition:
    # - condition: state
    #   entity_id: group.all_devices
    #   state: 'home'
    - condition: time
      after: '14:00'
      before: '23:00'
  action:
  - service: light.turn_on
    entity_id: all
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Rain stopped. Lights on'
- alias: 'Rain is over'
  trigger:
    - platform: state
      entity_id: sensor.precip_intensity
      to: 'None'
  condition:
    - condition: sun
      after: 'sunset'
      after_offset: '-01:00:00'
  action:
  - service: light.turn_off
    entity_id: all
  - service: notify.signal_notify
    data:
      message: '{{ now().strftime("%Y-%m-%dT%H:%M:%S%z") }} - Rain stopped. Lights off'
- id: update_morning_commute_sensor
  alias: "Commute - Update morning commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/5'
  condition:
    - condition: time
      after: '05:00:00'
      before: '6:00:00'
    - condition: time
      weekday:
        - tue
        - wed
        - thu
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.waze_home_to_collins
    - data_template:
        message: "{{ now().strftime('%Y-%m-%dT%H:%M:%S%z') }} - Travel time is {{ states('sensor.waze_home_to_collins') }}"
      service: notify.signal_notify
- id: change_light_commute_time
  trigger:
    platform: time_pattern
    minutes: '/5' 
  condition:
    - condition: time
      after: '05:00:00'
      before: '06:00:00'
    - condition: time
      weekday:
        - tue
        - wed
        - thu
  action:
  - service: light.turn_on
    data: 
      entity_id: light.living_room_lamp
      brightness: 125
      rgb_color: >
        {% set drive_time = state('sensor.waze_home_to_collins') %}
        {% if 0 <= drive_time <= 50 %}
        [0, 255, 0]
        {% elif 50 < drive_time <= 60 %}
        [255, 165, 0]
        {% elif drive_time > 60 %}
        [255, 0, 0]
        {% else %}
        [212, 235, 255] # in case the drive time isn't inside any of these if statements
        {% endif %}
